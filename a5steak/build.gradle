ext {
    libsSrcDir = new File("${projectDir}/libs")
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files("${buildDir}/native-libs/native-libs.jar")

    compile project(':base')

    compile (project(':ai')) {
        exclude module: 'base'
    }

    compile (project(':gson')) {
        exclude module: 'base'
    }
    compile (project(':eventbus')) {
        exclude module: 'base'
    }
    compile (project(':ux')) {
        exclude module: 'base'
    }
    compile (project(':phone')) {
        exclude module: 'base'
    }
    compile (project(':bluetooth')) {
        exclude module: 'base'
    }
    compile (project(':time')) {
        exclude module: 'base'
    }
    compile (project(':zip')) {
        exclude module: 'base'
    }
    compile (project(':facebook')) {
        exclude module: 'base'
    }
    compile (project(':network')) {
        exclude module: 'base'
    }
    compile (project(':database')) {
        exclude module: 'base'
    }
    compile (project(':alarm')) {
        exclude module: 'base'
    }
    compile (project(':sensor')) {
        exclude module: 'base'
    }
    compile (project(':paypal')) {
        exclude module: 'base'
    }
    compile (project(':misc')) {
        exclude module: 'base'
    }
    compile (project(':system')) {
        exclude module: 'base'
    }
    compile (project(':customview')) {
        exclude module: 'base'
    }
    compile (project(':gmapwebservice')) {
        exclude module: 'base'
    }
    compile (project(':gspeech')) {
        exclude module: 'base'
    }
    compile (project(':gplus')) {
        exclude module: 'base'
    }
    compile (project(':gcm')) {
        exclude module: 'base'
    }
    compile (project(':gmap')) {
        exclude module: 'base'
    }
    compile (project(':gvision')) {
        exclude module: 'base'
    }
    compile (project(':gplay')) {
        exclude module: 'base'
    }
    compile (project(':glocation')) {
        exclude module: 'base'
    }


//    compile (project(':gmapinteractive')) {
//        exclude module: 'base'
//    }


}

task nativeLibsToJar(
        type: Jar,
        description: 'create a jar archive of the native libs') {
    destinationDir file("${buildDir}/native-libs")
    baseName 'native-libs'
    from fileTree(dir: libsSrcDir, include: '**/*.so')
    into 'lib/'
}
