ext {
    libsSrcDir = new File("${projectDir}/libs")
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files("${buildDir}/native-libs/native-libs.jar")

    compile project(':base')

    compile (project(':ai'))
    compile (project(':gson'))
    compile (project(':eventbus'))
    compile (project(':ux'))
    compile (project(':phone'))
    compile (project(':bluetooth'))
    compile (project(':time'))
    compile (project(':zip'))
    compile (project(':facebook'))
    compile (project(':network'))
    compile (project(':database'))
    compile (project(':alarm'))
    compile (project(':sensor'))
    compile (project(':paypal'))
    compile (project(':misc'))
    compile (project(':system'))
    compile (project(':customview'))
    compile (project(':gmapwebservice'))
    compile (project(':gspeech'))
    compile (project(':gplus'))
    compile (project(':gcm'))
    compile (project(':gmap'))
    compile (project(':gvision'))
    compile (project(':gplay'))
    compile (project(':glocation'))
    compile (project(':gmapinteractive'))



}

task nativeLibsToJar(
        type: Jar,
        description: 'create a jar archive of the native libs') {
    destinationDir file("${buildDir}/native-libs")
    baseName 'native-libs'
    from fileTree(dir: libsSrcDir, include: '**/*.so')
    into 'lib/'
}
